from payeer_api import PayeerAPIException
from keyboards.default.keyboards import *
from keyboards.inline.keyboards import *
from data.models import *
from states.states import *
from loader import dp, _, payeer, bot
from handlers.users.messages import get_all_locales
from aiogram.dispatcher import FSMContext
from data.config import LANGUAGE_DICT, MIN_MONEY_OUT, admins, BOT_ALIAS
import re


@dp.message_handler(state=Language.NewLanguage)
async def language_setup(message: types.Message, state: FSMContext):
    if message.text not in LANGUAGE_DICT.keys():
        await message.answer(_("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ–ø—Ü–∏–∏"))
        return
    await User.filter(user_id=message.chat.id).update(language=LANGUAGE_DICT[message.text])
    await message.answer(_("–Ø–∑—ã–∫ –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω", locale=LANGUAGE_DICT[message.text]),
                         reply_markup=main_keyboard(locale=LANGUAGE_DICT[message.text]))
    await state.finish()


@dp.message_handler(state=Money.PutGet)
async def select_action(message: types.Message, state: FSMContext):
    if message.text in get_all_locales("–ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á–µ—Ç üí≥"):
        await message.answer(_("–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏:"), reply_markup=main_keyboard())
        await message.answer(_("–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –Ω–∏–∂–µ –∫–∞–∫–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á–µ—Ç"), reply_markup=pay_options())
        await state.finish()
    elif message.text in get_all_locales("–°–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏ üí∞"):
        user = await User.get_or_none(user_id=message.chat.id)
        await message.answer(_("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ {min_out} —Ä—É–±–ª–µ–π\n–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ {money} —Ä—É–±–ª–µ–π.\n–í–≤–µ–¥–∏—Ç–µ "
                               "—Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏:\n\n(–º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª–∑–æ–≤–∞—Ç—å /cancel —á—Ç–æ–±—ã –≤—ã–π—Ç–∏)").
                             format(min_out=MIN_MONEY_OUT, money=user.income), reply_markup=types.ReplyKeyboardRemove())
        await state.finish()
        await GetMoney.next()
    else:
        await message.answer(_("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ–ø—Ü–∏–∏"))


@dp.message_handler(state=GetMoney.Amount)
async def select_amount(message: types.message, state: FSMContext):
    if re.fullmatch(r"[+-]?([0-9]*[.])?[0-9]+", message.text):
        user = await User.get_or_none(user_id=message.chat.id)
        if float(message.text) > user.income:
            await message.answer(_("–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ {money} —Ä—É–±–ª–µ–π").format(money=user.income))
            return
        if float(message.text) < MIN_MONEY_OUT:
            await message.answer(_("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –∏–∑ –±–æ—Ç–∞ {} —Ä—É–±–ª–µ–π").format(MIN_MONEY_OUT))
            return
        async with state.proxy() as data:
            data['amount'] = float(message.text)
        await message.answer(_("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä –≤–∞—à–µ–≥–æ Payeer –∫–æ—à–µ–ª—å–∫–∞"))
        await GetMoney.next()
    else:
        await message.answer(_("–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã"))


@dp.message_handler(state=GetMoney.WalletNumber)
async def select_wallet(message: types.Message, state: FSMContext):
    if re.fullmatch(r"P[a-zA-Z0-9]{7,12}", message.text):
        async with state.proxy() as data:
            data['wallet_code'] = message.text
        await message.answer(_("–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã—Å–ª–∞—Ç—å {money} —Ä—É–±–ª–µ–π –Ω–∞ –∫–æ—à–µ–ª–µ–∫ {wallet}?\n\n–ù–∞–ø–∏—à–∏—Ç–µ \"–¥–∞\" "
                               "—á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å.").format(money=data['amount'], wallet=message.text),
                             reply_markup=confirm_keyboard())
        await GetMoney.next()
    else:
        await message.answer(_("–ù–æ–º–µ—Ä –∫–æ—à–µ–ª—å–∫–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å P –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç 7-12 —Ü–∏—Ñ—Ä. –ù–∞–ø—Ä–∏–º–µ—Ä P1000000"))

#TODO set up correctly payment (how much person can get, and - for money of user)
@dp.message_handler(state=GetMoney.Finish)
async def finish_check(message: types.Message, state: FSMContext):
    await GetMoney.next()
    if message.text in get_all_locales("–¥–∞"):
        async with state.proxy() as data:
            try:
                res = payeer.transfer(data['amount'], data["wallet_code"], "RUB", "RUB", comment=str(message.chat.id))
            except PayeerAPIException as error:
                if str(repr(error)) == "PayeerAPIException(['transferHimselfForbidden'])":
                    await message.answer(_("–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ"), reply_markup=main_keyboard())
                else:
                    await message.answer(_("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–∂–µ"), reply_markup=main_keyboard())
                    for id_a in admins:
                        await bot.send_message(id_a, _("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ @{}. –û–ø–∏—Å–∞–Ω–∏–µ: {}").
                                               format(BOT_ALIAS, str(repr(error))))
                return
            await Transaction(paying_sys_id=200, user_id=message.chat.id, rub_amount=data['amount'],
                              bot_pay=True, wallet_number=data["wallet_code"]).save()  # code 200 means it's from bot
            user = await User.get_or_none(user_id=message.chat.id)
            await User.filter(user_id=message.chat.id).update(income=(float(user.income) - float(data['amount'])))
            config = await User.get(user_id=1000)
            await User.filter(user_id=1000).update(income=(config.income + float(data['amount'])))
            await message.answer(_("–û–ø–ª–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. —Å–ø–∞—Å–∏–±–æ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞!"),
                                 reply_markup=main_keyboard())
    else:
        await message.answer(_("–ù–∞–ø–∏—à–∏—Ç–µ \"–¥–∞\" —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏–ª–∏ /cancel —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –∏–ª–∏ –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å –¥–∞–Ω–Ω—ã–µ"))
